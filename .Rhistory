add_significance() %>%
add_xy_position()
tukey_PN
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=PN)
tmp
write.csv.tabular(tmp, "Figures/PN_Change.csv")
PN_change_Box =
ggplot(PN, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_PN,size = 8, bracket.size = 1, hide.ns = T)+
labs(subtitle = get_test_label(anova_PN, detailed = TRUE),
caption = get_pwc_label(tukey_PN)) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Paspalum notatum")
PN_change_Box
ggsave("Figures/PNchange.png",
width = 10, height = 7)
################################################################################
########################### Cynodon dactylon ###################################
################################################################################
CD =
Change_Abundance[which(Change_Abundance$Species == "Cynodon dactylon"),]
CD<-as.data.frame(CD)
CD$Treatment<-factor(CD$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = CD)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
anova_CD = CD %>% anova_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_CD)
tukey_CD <- CD %>%
tukey_hsd(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_CD
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=CD )
tmp
write.csv.tabular(tmp, "Figures/CD_Change.csv")
CD_change_Box =
ggplot(CD, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_CD,size = 8, bracket.size = 1, hide.ns = T)+
labs(subtitle = get_test_label(anova_CD, detailed = TRUE),
caption = get_pwc_label(tukey_CD)) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Cynodon dactylon")
CD_change_Box
ggsave("Figures/change_CD.png",
width = 10, height = 7)
################## Save Figures Above using ggarrange ##########################
Change =
ggarrange(PN_change_Box, CD_change_Box, ncol = 2, nrow = 1)
annotate_figure(Change, top = text_grob("", color = "black",
face = "bold", size = 25))
ggsave("Figures/Change_NonGrass.png",
width = 12, height = 8)
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "lubridate", "ggpubr")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(tidyverse)
library(vegan)
library(agricolae)
library(lubridate)
library(ggpubr)
##########################     Read in  Data      ##############################
data = read.csv("Data/GRIN - Weather Data.csv")
##########################     Read in  Data      ##############################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
############################# Year 2023 ########################################
data = filter(data, Year == 2023)
############################# Year 2022 ########################################
data = filter(data, Year == 2022)
##########################     Read in  Data      ##############################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
############################# Year 2022 ########################################
data = filter(data, Year == 2022)
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip.Total*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
View(rain)
View(data)
replace(data, 2, scan(text = as.character(data$Precip), flush = TRUE))
View(data)
##########################     Read in  Data      ##############################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
data = replace(data, 2, scan(text = as.character(data$Precip), flush = TRUE))
View(data)
data = replace(data, 1, scan(text = as.character(data$Precip), flush = TRUE))
data = replace(data, 3, scan(text = as.character(data$Precip), flush = TRUE))
##########################     Read in  Data      ##############################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
data = replace(data, 3, scan(text = as.character(data$Precip), flush = TRUE))
##########################     Read in  Data      ##############################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
############################# Year 2022 ########################################
data = filter(data, Year == 2022)
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
ggsave("Figures/precip.png",
width = 10, height = 7)
temp =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = (Temp.Max-(32))*(5/9)), color = "red", size = 1.25) +
geom_line(aes(y = (Temp.Ave-(32))*(5/9)), color = "black", size = 1.25) +
geom_line(aes(y = (Temp.Min-(32))*(5/9)), color = "lightblue", size = 1.25) +
scale_x_date(date_breaks = "months" , date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
axis.line.x = element_blank(),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Temperature C", title = "")
temp
temp =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = (Temp.High-(32))*(5/9)), color = "red", size = 1.25) +
geom_line(aes(y = (Temp.Ave-(32))*(5/9)), color = "black", size = 1.25) +
geom_line(aes(y = (Temp.Low-(32))*(5/9)), color = "lightblue", size = 1.25) +
scale_x_date(date_breaks = "months" , date_labels = "%b") +
geom_vline(xintercept = as.Date(data$Date[36]), linetype="solid",
color = "blue", size=1.2) +
geom_vline(xintercept = as.Date(data$Date[160]), linetype="solid",
color = "orange", size=1.2) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
axis.line.x = element_blank(),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Temperature C", title = "")
temp
temp =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = (Temp.High-(32))*(5/9)), color = "red", size = 1.25) +
geom_line(aes(y = (Temp.Ave-(32))*(5/9)), color = "black", size = 1.25) +
geom_line(aes(y = (Temp.Low-(32))*(5/9)), color = "lightblue", size = 1.25) +
scale_x_date(date_breaks = "months" , date_labels = "%b") +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
axis.line.x = element_blank(),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Temperature C", title = "")
temp
ggsave("Figures/23_temp.png",
width = 14, height = 7)
################## Save Figures Above using ggarrange ##########################
ggarrange(temp, rain, ncol = 1, nrow = 2)
ggsave("Figures/23_rainTemp.png",
width = 14, height = 12)
rain =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = Precip*25.4), color = "black", size = 1.25) +
scale_x_date(date_breaks = "months", date_labels = "%b") +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
ggsave("Figures/22_precip.png",
width = 10, height = 7)
temp =
ggplot(data, aes(x = Date)) +
geom_line(aes(y = (Temp.High-(32))*(5/9)), color = "red", size = 1.25) +
geom_line(aes(y = (Temp.Ave-(32))*(5/9)), color = "black", size = 1.25) +
geom_line(aes(y = (Temp.Low-(32))*(5/9)), color = "lightblue", size = 1.25) +
scale_x_date(date_breaks = "months" , date_labels = "%b") +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
axis.line.x = element_blank(),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Temperature C", title = "")
temp
ggsave("Figures/22_temp.png",
width = 14, height = 7)
################## Save Figures Above using ggarrange ##########################
ggarrange(temp, rain, ncol = 1, nrow = 2)
ggsave("Figures/22_rainTemp.png",
width = 14, height = 12)
##################### 2022 - 2023 Weather Data #################################
data = read.csv("Data/FNPS - Seed Mixture Project - Weather.csv")
data$Date <- mdy(data$Date)
data$Month <- months(as.Date(data$Date))
data$Year <- as.numeric(format(data$Date,'%Y'))
# Temp data sorting by month #
Max = data %>%
group_by(Year, Month) %>%
summarize(Max = max(Temp.Max))
# Temp data sorting by month #
Max = data %>%
group_by(Year, Month) %>%
summarize(Max = max(Temp.High))
Min = data %>%
group_by(Year, Month) %>%
summarize(Min = max(Temp.Min))
Min = data %>%
group_by(Year, Month) %>%
summarize(Min = max(Temp.Low))
Ave = data %>%
group_by(Year, Month) %>%
summarize(Ave = mean(Temp.Ave))
prcp = data %>%
group_by(Year, Month) %>%
summarize(prcp = sum(Precip))
df = prcp
df$Max = Max$Max
df$Min = Min$Min
df$Ave = Ave$Ave
############################# Weather Graph ####################################
rain =
ggplot(df, aes(x = Month)) +
geom_bar(stat = "identity", aes(y = prcp*25.4),
fill = "orange") +
scale_x_discrete(limits = month.name) +
facet_wrap(~Year) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_text(angle=90, hjust=1,
size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Total Precipitation (mm)", title = "")
rain
ggsave("Figures/precip.png",
width = 10, height = 7)
temp =
ggplot(df, aes(x = Month)) +
geom_line(aes(y = (Max-32)*(5/9), group = 1), color = 'red', size = 1.5) +
geom_line(aes(y = (Min-32)*(5/9), group = 1), color = "blue", size = 1.5) +
geom_point(aes(y = (Max-32)*(5/9)), size = 2) +
geom_point(aes(y = (Min-32)*(5/9)), size = 2) +
scale_x_discrete(limits = month.name)  +
facet_wrap(~Year) +
theme_classic() +
theme(text = element_text(size=20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
axis.title.x = element_text( size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="bold", colour = "black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
axis.line.x = element_blank(),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Temperature C", title = "")
temp
ggsave("Figures/temp.png",
width = 10, height = 7)
################## Save Figures Above using ggarrange ##########################
ggarrange(temp, rain, ncol = 1, nrow = 2)
ggsave("Figures/21-22_rainTemp.png",
width = 8, height = 12)
