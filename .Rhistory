<<<<<<< HEAD
add_significance()
summary(anova_CD)
tukey_CD <- CD %>%
tukey_hsd(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_CD
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=CD )
tmp
write.csv.tabular(tmp, "Figures/CD_Change.csv")
CD_change_Box =
ggplot(CD, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_CD,size = 8, bracket.size = 1, hide.ns = T)+
labs(subtitle = get_test_label(anova_CD, detailed = TRUE),
caption = get_pwc_label(tukey_CD)) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Cynodon dactylon")
CD_change_Box
################## Save Figures Above using ggarrange ##########################
Change =
ggarrange(PN_change_Box, CD_change_Box, ncol = 2, nrow = 1)
annotate_figure(Change, top = text_grob("", color = "black",
face = "bold", size = 25))
ggsave("Figures/Change_NonGrass.png",
width = 12, height = 8)
##################################  COVER CAHNGES ##############################
PN =
Change_Abundance[which(Change_Abundance$Species == "Paspalum notatum"),]
PN<-as.data.frame(PN)
PN$Treatment<-factor(PN$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = PN)
=======
# Create a data frame for comparison letters
comparison_letters <- data.frame(comparisons)
tukey.cld <- multcompLetters(comparisons$p.adjusted, compare = "<")
tukey.cld <- multcompLetters(as.character(comparisons$p.adjusted), compare = "<")
####################### Read in 2021 - 2023 Data  ##############################
Data = read.csv("Data/FNPS - Seed Mixture Project - 2021-2023.csv")
Data$Coverage = as.numeric(Data$Coverage)
str(Data)
summary(Data)
# Reclasifys coverage data (CV) from 1-10 scale to percent scale #
Data <- mutate(Data, Coverage = case_when(
grepl(10, Coverage) ~ 97.5,
grepl(1, Coverage) ~ 0.1,
grepl(2, Coverage) ~ 0.5,
grepl(3, Coverage) ~ 1.5,
grepl(4, Coverage) ~ 3.5,
grepl(5, Coverage) ~ 7.5,
grepl(6, Coverage) ~ 17.5,
grepl(7, Coverage) ~ 37.5,
grepl(8, Coverage) ~ 62.5,
grepl(9, Coverage) ~ 85,
grepl(0, Coverage) ~ 0,
))
Data$Treatment = factor(Data$Treatment, levels=c('BH', 'BM', 'LH', 'LM', 'W', "C"))
Pt = filter(Data, Species == "Pityopsis trayci")
summary(Pt)
# Creates data sets by year #
Pt_22 = filter(Pt, Year == 1)
Pt_23 = filter(Pt, Year == 2)
############################### 2022 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Pt_22)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Pt_22$Treatment= as.factor(Pt_22$Treatment)
Pt_22 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova <- kruskal.test(Coverage ~ Treatment, data = Pt_22)
print(anova)
tukey <- dunn.test(Pt_22$Coverage, Pt_22$Treatment, method = "bonferroni")
tukey
# Extract the pairwise comparisons from Dunn's test
comparisons <- tukey$res
# Create a data frame for comparison letters
comparison_letters <- data.frame(comparisons)
tukey.cld <- multcompLetters(as.character(comparisons$p.adjusted), compare = "<")
class(comparisons$p.adjusted)
tukey <- dunn.test(Pt_22$Coverage, Pt_22$Treatment, method = "bonferroni")
tukey
# Extract the pairwise comparisons from Dunn's test
comparisons <- tukey$res
View(tukey)
# Create a data frame for comparison letters
comparison_letters <- data.frame(comparisons)
# Extract the pairwise comparisons from Dunn's test
comparison_letters <- data.frame(tukey$res)
# Create a data frame for comparison letters
tukey.cld <- multcompLetters(as.character(comparison_letters$p.adjusted), compare = "<")
# Extract the pairwise comparisons from Dunn's test
comparison_letters <- data.frame(tukey$res)
# Create a data frame for comparison letters
tukey.cld <- multcompLetters(as.character(comparison_letters$p.adjusted), compare = "<")
install.packages("rcompanion")
library(rcompanion)
CLD = cldList(P.adj ~ Comparison, data=dunn.iris$res)
CLD = cldList(P.adj ~ Comparison, data=tukey$res)
CLD
View(CLD)
View(tukey)
tukey[["P.adjusted"]]
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "extrafont", "plotrix",
"ggsignif", "multcompView", "ggpubr", "rstatix", "labdsv",
"tables")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(tidyverse)
library(vegan)
library(labdsv)
library(agricolae)
library(extrafont)
library(ggsignif)
library(multcompView)
library(ggpubr)
library(plotrix)
library(rstatix)
library(tables)
##########################     Read in  Data       #############################
Data = read.csv("Data/FNPS - Seed Mixture Project - 2021-2023.csv")
Data$Coverage = as.numeric(Data$Coverage)
# Reclasifys coverage data (CV) from 1-10 scale to percent scale #
Data <- mutate(Data, Coverage = case_when(
grepl(10, Coverage) ~ 97.5,
grepl(1, Coverage) ~ 0.1,
grepl(2, Coverage) ~ 0.5,
grepl(3, Coverage) ~ 1.5,
grepl(4, Coverage) ~ 3.5,
grepl(5, Coverage) ~ 7.5,
grepl(6, Coverage) ~ 17.5,
grepl(7, Coverage) ~ 37.5,
grepl(8, Coverage) ~ 62.5,
grepl(9, Coverage) ~ 85,
grepl(0, Coverage) ~ 0,
))
str(Data)
summary(Data)
Data$YID <- paste(Data$Year,Data$ID)
Data$ID_ <- paste(Data$Treatment, Data$ID)
# Orders years and treatments so that they display in same sequence in graphs #
Data$Year = factor(Data$Year, levels=c('1','2'))
Data$Treatment = factor(Data$Treatment, levels=c('BH', 'BM', 'LH', 'LM', 'W', "C"))
#################### Species abundances ########################################
# Creates and joins  data year 22 & 23 to make long data format #
Two_Abundance <- Data[which(Data$Year == "1"),]
Three_Abundance <- Data[which(Data$Year == "2"),]
Abundance_w <- full_join(Two_Abundance, Three_Abundance,
by = c('ID_', "Treatment", 'Species'))
Abundance_w = arrange(Abundance_w, Treatment)
# Turns NA values into zeros #
Abundance_w$Coverage.x <- ifelse(is.na(Abundance_w$Coverage.x), 0,
Abundance_w$Coverage.x)
Abundance_w$Coverage.y <- ifelse(is.na(Abundance_w$Coverage.y), 0,
Abundance_w$Coverage.y)
# Change abundance to reflect percentage change from (Year 1) to (Year 2)  #
Change_Abundance <- Abundance_w %>%
dplyr::select(ID_, Treatment, Species,
Coverage.x, Coverage.y) %>%
group_by(ID_, Treatment, Species) %>%
mutate(Change_abundance = Coverage.y - Coverage.x)
##################################  COVER CAHNGES ##############################
ES =
Change_Abundance[which(Change_Abundance$Species == "Eragrostis spectabilis"),]
ES<-as.data.frame(ES)
ES$Treatment<-factor(ES$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = ES)
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
<<<<<<< HEAD
anova_PN = PN %>% anova_test(Change_abundance ~ Treatment) %>%
add_significance()
anova_PN
lm(formula = Change_abundance ~ Treatment, PN)
tukey_PN <- PN %>%
tukey_hsd(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
# Test for Significance #
anova_PN = PN %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
anova_PN
lm(formula = Change_abundance ~ Treatment, PN)
tukey_PN <- PN %>%
=======
anova_ES = ES %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
anova_ES
lm(formula = Change_abundance ~ Treatment, ES)
tukey_ES <- ES %>%
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
dunn_test(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_ES
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=ES)
tmp
love_change_Box =
ggplot(ES, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_ES,size = 8, bracket.size = 1, hide.ns = T, bracket.nudge.y = -45)+
labs(subtitle = get_test_label(anova_ES, detailed = TRUE),
caption = get_pwc_label(tukey_ES)) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Eragrostis spectabilis")
love_change_Box
################################################################################
########################### Indiangrass ########################################
################################################################################
SS =
Change_Abundance[which(Change_Abundance$Species == "Sorghastrum secundum"),]
SS<-as.data.frame(SS)
SS$Treatment<-factor(SS$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = SS)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
anova_SS = SS %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_SS)
tukey_SS <- SS %>%
dunn_test(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_SS
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=SS )
tmp
write.csv.tabular(tmp, "Figures/SS_Change.csv")
SS_change_Box =
ggplot(SS, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
stat_pvalue_manual(tukey_SS,size = 8, bracket.size = 1,
hide.ns = T, bracket.nudge.y = -45 )+
labs(subtitle = get_test_label(anova_SS, detailed = TRUE),
caption = get_pwc_label(tukey_SS)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
<<<<<<< HEAD
labs(x = "", y = "Change in Coverage", title = "Cynodon dactylon")
CD_change_Box
################## Save Figures Above using ggarrange ##########################
Change =
ggarrange(PN_change_Box, CD_change_Box, ncol = 2, nrow = 1)
annotate_figure(Change, top = text_grob("", color = "black",
face = "bold", size = 25))
ggsave("Figures/Change_NonGrass.png",
width = 12, height = 8)
################################################################################
################################################################################
#########################   FNPS - Seed Mixture   ##############################
#########################       Obligates         ##############################
#########################  University of Florida  ##############################
#########################     Gage LaPierre       ##############################
#########################      2021 - 2023        ##############################
################################################################################
################################################################################
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "extrafont",
"ggsignif", "multcompView", "ggpubr", "rstatix",
"vegan", "labdsv")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(extrafont)
#font_import()
loadfonts(device = "win")
library(tidyverse)
library(vegan)
library(agricolae)
library(ggsignif)
library(multcompView)
library(ggpubr)
library(rstatix)
library(vegan)
library(labdsv)
####################### Read in 2021 - 2023 Data  ##############################
Data = read.csv("Data/FNPS - Seed Mixture Project - 2021-2023.csv")
Data$Coverage = as.numeric(Data$Coverage)
str(Data)
summary(Data)
# Reclasifys coverage data (CV) from 1-10 scale to percent scale #
Data <- mutate(Data, Coverage = case_when(
grepl(10, Coverage) ~ 97.5,
grepl(1, Coverage) ~ 0.1,
grepl(2, Coverage) ~ 0.5,
grepl(3, Coverage) ~ 1.5,
grepl(4, Coverage) ~ 3.5,
grepl(5, Coverage) ~ 7.5,
grepl(6, Coverage) ~ 17.5,
grepl(7, Coverage) ~ 37.5,
grepl(8, Coverage) ~ 62.5,
grepl(9, Coverage) ~ 85,
grepl(0, Coverage) ~ 0,
))
Data$Treatment = factor(Data$Treatment, levels=c('BH', 'BM', 'LH', 'LM', 'W', "C"))
Pt = filter(Data, Species == "Pityopsis trayci")
summary(Pt)
# Creates data sets by year #
Pt_22 = filter(Pt, Year == 1)
Pt_23 = filter(Pt, Year == 2)
################################################################################
################ Test for Significance across years ############################
################################################################################
############################### 2022 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Pt_22)
=======
labs(x = "", y = "Change in Coverage", title = "Sorghastrum secundum")
SS_change_Box
################################################################################
########################### Broomsedge #########################################
################################################################################
AV =
Change_Abundance[which(Change_Abundance$Species == "Andropogon virginicus"),]
AV<-as.data.frame(AV)
AV$Treatment<-factor(AV$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = AV)
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
<<<<<<< HEAD
# Compute Levene's Test
Pt_22$Treatment= as.factor(Pt_22$Treatment)
Pt_22 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_22 = Pt_22 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_22)
tukey_22 <- Pt_22 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_22
############################### 2023 Pt ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Pt_23)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Pt_23$Treatment= as.factor(Pt_23$Treatment)
Pt_23 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_23 = Pt_23 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_23)
tukey_23 <- Pt_23 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_23
################################################################################
################ Create Box Plot for Pityopsis Across Years ####################
################################################################################
## Lovegrass Coverage 2022 Box plot ##
PtBox22 =
ggplot(Pt_22, aes(x = Treatment, y = Coverage), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment),
position = position_jitterdodge(), size = 2, alpha = 0.5) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
stat_pvalue_manual(tukey_22,size = 8, bracket.size = 1, hide.ns = T)+
labs(subtitle = get_test_label(anova_22,
detailed = TRUE),
caption = get_pwc_label(tukey_22)) +
=======
# Test for Significance #
anova_AV = AV %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_AV)
tukey_AV <- AV %>%
dunn_test(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_AV
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd), data=AV )
tmp
AV_change_Box =
ggplot(AV, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_AV,size = 8, bracket.size = 1, hide.ns = T, bracket.nudge.y = -10)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
labs(subtitle = get_test_label(anova_AV, detailed = TRUE),
caption = get_pwc_label(tukey_AV)) +
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
<<<<<<< HEAD
text=element_text(size=20),
axis.title.x = element_text(size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="italic", colour = "black"),
axis.text.x=element_text(size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x =
element_text(size = 20, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "P. trayci % Coverage", title = "2022")
PtBox22
## Lovegrass Coverage 2023 Boxplot ##
PtBox23 =
ggplot(Pt_23, aes(x = Treatment, y = Coverage), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment),
position = position_jitterdodge(), size = 2, alpha = 0.5) +
stat_pvalue_manual(tukey_23, size = 8, bracket.size = 1, hide.ns = T)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
ylim(0, 100) +
labs(subtitle = get_test_label(anova_23,
detailed = TRUE),
caption = get_pwc_label(tukey_23)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(size=20, face="bold", colour = "black"),
axis.title.y = element_blank(),
axis.text.x=element_text(size=20, face = "bold", color = "black"),
axis.text.y=element_blank(),
axis.line.y = element_blank(),
axis.ticks = element_blank(),
=======
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
<<<<<<< HEAD
labs(x = "", y = "P. trayci % Coverage", title = "2023")
PtBox23
################## Save Figures Above using ggarrange ##########################
ggarrange(PtBox22, PtBox23, ncol = 2, nrow = 1)
ggsave("Figures/22-23_PtBox.png",
width = 16, height = 14)
tmp <- tabular(Treatment ~ Coverage * (mean+sd+std.error), data=Pt_22)
Lg = filter(Data, Species == "Liatris gracilis")
summary(Lg)
# Creates data sets by year #
Lg_22 = filter(Lg, Year == 1)
Lg_23 = filter(Lg, Year == 2)
############################### 2022 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Lg_22)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Lg_22$Treatment= as.factor(Lg_22$Treatment)
Lg_22 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_22 = Lg_22 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_22)
tukey_22 <- Lg_22 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_22
############################### 2023 Lg ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Lg_23)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Lg_23$Treatment= as.factor(Lg_23$Treatment)
Lg_23 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_23 = Lg_23 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_23)
tukey_23 <- Lg_23 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_23
Lg = filter(Data, Species == "Liatris gracilis")
summary(Lg)
# Creates data sets by year #
Lg_22 = filter(Lg, Year == 1)
Lg_23 = filter(Lg, Year == 2)
############################### 2022 Data ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Lg_22)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Lg_22$Treatment= as.factor(Lg_22$Treatment)
Lg_22 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_22 = Lg_22 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_22)
tukey_22 <- Lg_22 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_22
############################### 2023 Lg ######################################
# Check Assumptions #
model  <- lm(Coverage ~ Treatment, data = Lg_23)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Compute Levene's Test
Lg_23$Treatment= as.factor(Lg_23$Treatment)
Lg_23 %>% levene_test(Coverage ~ Treatment)
# Test for Significance #
anova_23 = Lg_23 %>% anova_test(Coverage ~ Treatment) %>%
add_significance()
summary(anova_23)
tukey_23 <- Lg_23 %>%
tukey_hsd(Coverage ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_23
## Lovegrass Coverage 2022 Box plot ##
LgBox22 =
ggplot(Lg_22, aes(x = Treatment, y = Coverage), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment),
position = position_jitterdodge(), size = 2, alpha = 0.5) +
stat_pvalue_manual(tukey_22,size = 8, bracket.size = 1, hide.ns = T)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
ylim(0, 100) +
labs(subtitle = get_test_label(anova_22,
detailed = TRUE),
caption = get_pwc_label(tukey_22)) +
=======
labs(x = "", y = "Change in Coverage", title = "Andropogon virginicus")
AV_change_Box
################################################################################
########################### Dalea Pina #########################################
################################################################################
DP =
Change_Abundance[which(Change_Abundance$Species == "Dalea pinnata"),]
AV_change_Box =
ggplot(AV, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_AV,size = 8, bracket.size = 1, hide.ns = T, bracket.nudge.y = -10)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
labs(subtitle = get_test_label(anova_AV, detailed = TRUE),
caption = get_pwc_label(tukey_AV)) +
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
<<<<<<< HEAD
text=element_text(size=20),
axis.title.x = element_text(size=20, face="bold", colour = "black"),
axis.title.y = element_text(size=20, face="italic", colour = "black"),
axis.text.x=element_text(size=20, face = "bold", color = "black"),
axis.text.y=element_text(size=20, face = "bold", color = "black"),
strip.text.x =
element_text(size = 20, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "L. gracilis % Coverage", title = "2022")
LgBox22
## Lovegrass Coverage 2023 Boxplot ##
LgBox23 =
ggplot(Lg_23, aes(x = Treatment, y = Coverage), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment),
position = position_jitterdodge(), size = 2, alpha = 0.5) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600", "#99FF99", "#CC0000", "#330099")) +
stat_pvalue_manual(tukey_23, size = 8, bracket.size = 1, hide.ns = T)+
ylim(0, 100) +
labs(subtitle = get_test_label(anova_23,
detailed = TRUE),
caption = get_pwc_label(tukey_23)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(size=20, face="bold", colour = "black"),
axis.title.y = element_blank(),
axis.text.x=element_text(size=20, face = "bold", color = "black"),
axis.text.y=element_blank(),
axis.line.y = element_blank(),
axis.ticks = element_blank(),
=======
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
<<<<<<< HEAD
labs(x = "", y = "L. gracilis % Coverage", title = "2023")
LgBox23
################## Save Figures Above using ggarrange ##########################
ggarrange(LgBox22, LgBox23, ncol = 2, nrow = 1)
ggsave("Figures/22-23_LGBox.png",
width = 12, height = 10)
tmp <- tabular(Treatment ~ Coverage * (mean+sd+std.error), data=Lg_22)
write.csv.tabular(tmp, "Figures/Lg_23.csv")
=======
labs(x = "", y = "Change in Coverage", title = "Andropogon virginicus")
AV_change_Box
################################################################################
########################### Dalea Pina #########################################
################################################################################
DP =
Change_Abundance[which(Change_Abundance$Species == "Dalea pinnata"),]
DP<-as.data.frame(DP)
DP$Treatment<-factor(DP$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = DP)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
anova_DP = DP %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_DP)
tukey_DP <- DP %>%
dunn_test(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_DP
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=DP )
tmp
write.csv.tabular(tmp, "Figures/DP_Change.csv")
DP_change_Box =
ggplot(DP, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_DP,size = 8, bracket.size = 1, hide.ns = T)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
labs(subtitle = get_test_label(anova_DP, detailed = TRUE),
caption = get_pwc_label(tukey_DP)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Dalea pinnata")
DP_change_Box
################################################################################
########################### Splitbeard #########################################
################################################################################
AT =
Change_Abundance[which(Change_Abundance$Species == "Andropogon ternarius"),]
AT<-as.data.frame(AT)
AT$Treatment<-factor(AT$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = AT)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
anova_AT = AT %>% kruskal_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_AT)
tukey_AT <- AT %>%
dunn_test(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_AT
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=AT )
tmp
write.csv.tabular(tmp, "Figures/AT_Change.csv")
AT_change_Box =
ggplot(AT, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
stat_pvalue_manual(tukey_AT,size = 8, bracket.size = 1, hide.ns = T)+
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
labs(subtitle = get_test_label(anova_AT, detailed = TRUE),
caption = get_pwc_label(tukey_AT)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Andropogon ternarius")
AT_change_Box
################################################################################
########################### Pityopsis ##########################################
################################################################################
Pt =
Change_Abundance[which(Change_Abundance$Species == "Pityopsis trayci"),]
Pt<-as.data.frame(Pt)
Pt$Treatment<-factor(Pt$Treatment)
# Check Assumptions #
model  <- lm(Change_abundance ~ Treatment, data = Pt)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)
# Test for Significance #
anova_Pt = Pt %>% anova_test(Change_abundance ~ Treatment) %>%
add_significance()
summary(anova_Pt)
tukey_Pt <- Pt %>%
tukey_hsd(Change_abundance ~ Treatment) %>%
add_significance() %>%
add_xy_position()
tukey_Pt
tmp <- tabular(Treatment ~ Change_abundance* (mean+sd+std.error), data=Pt )
tmp
write.csv.tabular(tmp, "Figures/Pt_Change.csv")
Pt_change_Box =
ggplot(Pt, aes(x = Treatment, y = Change_abundance), colour = Treatment) +
geom_boxplot(aes(fill=Treatment), alpha = 0.5, outlier.shape = NA) +
geom_point(aes(fill=Treatment), size = 3,
position = position_jitterdodge(), alpha = 0.7) +
scale_color_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
scale_fill_manual(labels=c('BH', 'BM', 'LH', 'LM', 'W', "C"),
values=c("#663333", "#FF9966", "#006600",
"#99FF99", "#CC0000", "#330099")) +
stat_pvalue_manual(tukey_Pt,size = 8, bracket.size = 1, hide.ns = T)+
labs(subtitle = get_test_label(anova_Pt, detailed = TRUE),
caption = get_pwc_label(tukey_Pt)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=16),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x =
element_text(size = 15, colour = "black", face = "bold"),
legend.position = "none") +
guides(fill = guide_legend(label.position = "bottom")) +
labs(x = "", y = "Change in Coverage", title = "Pityopsis graminifolia")
Pt_change_Box
>>>>>>> 0fd23c01979d017347dd9ad224b821af5bfca311
